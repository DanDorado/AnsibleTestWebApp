#Playbook for online store

---

-
  name: 'Set up the Prerequisites of e-commerce'
  hosts: targets
  tasks:
    
    - name: 'Initialise'
      debug:
        msg: 'Logging into {{  ansible_host  }} with {{  ansible_user  }}'

    - name: 'Install Firewalld'
      yum:
        name: firewalld
        state: present
      become: true
      become_method: sudo

    - name: 'Start Firewalld'
      service: service=firewalld state=started
      become: true
      become_method: sudo

    - name: 'Enable firewalld on system startup'
      command: systemctl enable firewalld
      become: true
      become_method: sudo

    - name: 'Install MariaDB'
      yum:
        name: mariadb-server
        state: present
      become: true
      become_method: sudo

    - name: 'Start Mariadb'
      service: service=mariadb state=started
      become: true
      become_method: sudo

    - name: 'Enable Mariadb on system startup'
      command: systemctl enable mariadb
      become: true
      become_method: sudo

    - name: 'Configure Firewall for Database'
      command: firewall-cmd --permanent --zone=public --add-port=3306/tcp
      become: true
      become_method: sudo
    
    - command: firewall-cmd --reload
      become: true
      become_method: sudo

    - name: 'Modify mysql config to allow first modifications'
      lineinfile:
        path: /etc/my.cnf
        line: "skip-grant-tables"
        regexp: '^(.*)# instructions in http://fedoraproject.org/wiki/Systemd(.*)$'
        backrefs: yes
      become: true
      become_method: sudo

    - name: 'Reload Mariadb with new config'
      service: service=mariadb state=restarted
      become: true
      become_method: sudo

-
  name: 'Create MySql database'
  hosts: targets
  tasks:

    - name: 'Destory any existing ecomdb database'
      command:  mysql -e "DROP DATABASE IF EXISTS ecomdb;"

    - name: 'Create database ecomdb'
      command:  mysql -e "CREATE DATABASE IF NOT EXISTS ecomdb;"

    - name: 'Allow access to DB'
      command: mysql -e "FLUSH PRIVILEGES;"

    - name: 'Initialise User'
      command: mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'ecomuser'@'localhost';"
      become: true
      become_method: sudo

    - name: 'Create user for ecomdb'
      command: mysql -e "DROP USER 'ecomuser'@'localhost';"
      become: true
      become_method: sudo

    - name: 'Create user for ecomdb'
      command: mysql -e "CREATE USER 'ecomuser'@'localhost' IDENTIFIED BY 'ecompassword';"
      become: true
      become_method: sudo

    - name: 'Grant high-level privilages to ecomuser'
      command: mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'ecomuser'@'localhost';"
      become: true
      become_method: sudo

    - name: 'Reset with new privilages'
      command: mysql -e "FLUSH PRIVILEGES;"
      become: true
      become_method: sudo

    - name: Create target directory
      file: 
        path: /home/{{  ansible_user  }}/proto
        state: directory

    - name: Create table
      command: mysql -e "USE ecomdb; CREATE TABLE products (id mediumint(8) unsigned NOT NULL auto_increment,Name varchar(255) default NULL,Price varchar(255) default NULL, ImageUrl varchar(255) default NULL,PRIMARY KEY (id)) AUTO_INCREMENT=1;"
      become: true
      become_method: sudo
      
    - name: Template a file to /etc/file.conf
      template:
        src: /home/controller/proto/db-load-script.sql
        dest: /home/target/proto/db-load-script.sql
      become: true
      become_method: sudo

    - name: Run script
      shell: mysql -u ecomuser -pecompassword < /home/target/proto/db-load-script.sql
      become: true
      become_method: sudo


-
  name: 'Configure Web Service'
  hosts: targets
  tasks:
    - name: Install php-mysql
      yum:
        name: httpd php php-mysql
        state: present
      become: true
      become_method: sudo

    - command: firewall-cmd --permanent --zone=public --add-port=80/tcp
      become: true
      become_method: sudo

    - command: firewall-cmd --reload
      become: true
      become_method: sudo

    - command: sed -i 's/index.html/index.php/g' /etc/httpd/conf/httpd.conf
      become: true
      become_method: sudo
    
    - name: start httpd
      service: service=httpd state=started

    - command: systemctl enable httpd
      become: true
      become_method: sudo
      

    

      

